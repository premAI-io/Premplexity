volumes:
  postgres_data: {}

services:
  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw

  proxy:
    image: nginx:1.26-alpine
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./certbot/www/:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/letsencrypt/:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro

  postgres:
    image: postgres:14-alpine
    command: postgres -c stats_temp_directory=/tmp
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - app_network

  app:
    build:
      context: .
    command: >
      sh -c "
        echo 'Waiting for PostgreSQL to be ready...'
        while ! nc -z postgres 5432; do
          sleep 0.1
        done
        echo 'PostgreSQL is ready!'
        npm run migrate && npm start
      "
    env_file:
      - .env
    depends_on:
      - postgres
    ports:
      - 3000:3000
    networks:
      - app_network

networks:
  app_network:
    driver: bridge
